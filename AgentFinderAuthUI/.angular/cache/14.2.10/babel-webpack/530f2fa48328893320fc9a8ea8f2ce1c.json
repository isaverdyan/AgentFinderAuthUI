{"ast":null,"code":"import { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgToastService } from 'ng-angular-popup';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport { AuthService } from '../../services/auth.service';\nimport { UserStoreService } from '../../services/user-store.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ng-angular-popup\";\nimport * as i5 from \"../../services/user-store.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction LoginComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 29);\n    i0.ɵɵtext(1, \"*Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_small_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 29);\n    i0.ɵɵtext(1, \"*Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, auth, router, toast, userStore) {\n      this.fb = fb;\n      this.auth = auth;\n      this.router = router;\n      this.toast = toast;\n      this.userStore = userStore;\n      this.type = \"password\";\n      this.isText = false;\n      this.eyeIcon = \"fa-eye-slash\";\n    }\n\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n\n    hideShowPass() {\n      this.isText = !this.isText;\n      this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n      this.isText ? this.type = \"text\" : this.type = \"password\";\n    }\n\n    onLogin() {\n      if (this.loginForm.valid) {\n        this.auth.signIn(this.loginForm.value).subscribe({\n          next: res => {\n            this.loginForm.reset();\n            this.auth.storeToken(res.accessToken);\n            this.auth.storeRefreshToken(res.refreshToken);\n            console.log(\">>>>>>>>>> \" + JSON.stringify(res));\n            const tokenPayload = this.auth.decodedToken();\n            this.userStore.setFullNameForStore(tokenPayload.name);\n            this.userStore.setRoleForStore(tokenPayload.role);\n            this.toast.success({\n              detail: \"SUCCESS\",\n              summary: res.message,\n              duration: 5000\n            });\n            this.router.navigate(['dashboard']);\n          },\n          error: err => {\n            this.toast.error({\n              detail: \"ERROR\",\n              summary: \"Something went wrong!\",\n              duration: 5000\n            });\n            console.log(err);\n          }\n        });\n        console.log(this.loginForm.value);\n      } else {\n        //throw the error using toaster and required fields\n        console.log(\"form is not valid\");\n        ValidateForm.validateAllFormFields(this.loginForm);\n        alert(\"your form is invalid\");\n      }\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.NgToastService), i0.ɵɵdirectiveInject(i5.UserStoreService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 37,\n    vars: 11,\n    consts: [[1, \"contain\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [3, \"click\"], [1, \"form-inline\", \"fr\", \"mt-4\"], [\"id\", \"forget\", 1, \"font-weight-bold\"], [1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forget\", \"routerLink\", \"/signup\"], [1, \"mx-3\", \"my-2\", \"py-2\", \"bordert\"], [1, \"text-center\", \"py-3\"], [\"href\", \"https://www.facebook.com\", \"target\", \"_blank\", 1, \"px-2\"], [\"src\", \"https://www.dpreview.com/files/p/articles/4698742202/facebook.jpeg\", \"alt\", \"\"], [\"href\", \"https://www.google.com\", \"target\", \"_blank\", 1, \"px-2\"], [\"src\", \"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-suite-everything-you-need-know-about-google-newest-0.png\", \"alt\", \"\"], [\"href\", \"https://www.github.com\", \"target\", \"_blank\", 1, \"px-2\"], [\"src\", \"https://www.freepnglogos.com/uploads/512x512-logo-png/512x512-logo-github-icon-35.png\", \"alt\", \"\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\", 5);\n        i0.ɵɵtext(6, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7)(9, \"div\", 8)(10, \"div\", 9);\n        i0.ɵɵelement(11, \"span\", 10)(12, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(13, LoginComponent_small_13_Template, 2, 0, \"small\", 12);\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"div\", 9);\n        i0.ɵɵelement(16, \"span\", 13)(17, \"input\", 14);\n        i0.ɵɵelementStart(18, \"span\", 15);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_18_listener() {\n          return ctx.hideShowPass();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(19, LoginComponent_small_19_Template, 2, 0, \"small\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 16)(21, \"a\", 17);\n        i0.ɵɵtext(22, \"Forgot Password?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_23_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵtext(24, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 19);\n        i0.ɵɵtext(26, \"Don't have account? \");\n        i0.ɵɵelementStart(27, \"a\", 20);\n        i0.ɵɵtext(28, \"Sign Up\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"div\", 21)(30, \"div\", 22)(31, \"a\", 23);\n        i0.ɵɵelement(32, \"img\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"a\", 25);\n        i0.ɵɵelement(34, \"img\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"a\", 27);\n        i0.ɵɵelement(36, \"img\", 28);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"type\", ctx.type);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      }\n    },\n    dependencies: [i6.NgIf, i3.RouterLinkWithHref, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}