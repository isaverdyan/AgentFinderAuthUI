{"ast":null,"code":"import { HttpClient, HttpHeaders, HttpParams, HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MessageSenderService = /*#__PURE__*/(() => {\n  class MessageSenderService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'https://localhost:7216/api/notification/';\n    }\n\n    sendMessageToCustomer(messageModel) {\n      var token = localStorage.getItem('token');\n      console.log(' token = ' + token); //let body = formData;\n      //const headers = {'Authorization': `Bearer ${token}`, 'content-type': 'application/json', 'Access-Control-Allow-Origin': '*'};\n      // const headers = new HttpHeaders({\n      //   'Authorization': `Bearer ${token}`,\n      //   'Content-Type': 'application/json'\n      // });\n      // const options = {\n      //   headers: new HttpHeaders({'Authorization': `Bearer ${token}`, 'Content-Type': 'multipart/form-data;boundary=----CypressFormDataBoundary'}),      \n      //    params: new HttpParams(),\n      //    reportProgress: false,\n      //};\n\n      const headers = new HttpHeaders().set('content-type', 'application/json').set('Authorization', `Bearer ${token}`);\n      let options = {\n        headers: headers\n      };\n      let params = new HttpParams();\n      messageModel.customers.forEach(id => {\n        params.append('customers[]', id);\n      });\n      var body = {\n        messageText: messageModel.messageText,\n        customers: messageModel.customers\n      };\n      const req = new HttpRequest('POST', `${this.baseUrl}offers`, body, options);\n      this.http.request(req).subscribe(res => {\n        console.log(' uuuuuuuuu ' + res);\n      }); //return this.http.post<any>(`${this.baseUrl}offers`, body, options);\n    }\n\n  }\n\n  MessageSenderService.ɵfac = function MessageSenderService_Factory(t) {\n    return new (t || MessageSenderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MessageSenderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MessageSenderService,\n    factory: MessageSenderService.ɵfac,\n    providedIn: 'root'\n  });\n  return MessageSenderService;\n})();","map":null,"metadata":{},"sourceType":"module"}