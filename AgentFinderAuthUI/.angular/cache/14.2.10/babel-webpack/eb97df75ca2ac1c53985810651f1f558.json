{"ast":null,"code":"import { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"src/app/services/user-store.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction DashboardComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-sidebar\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(api, auth, userStore) {\n      this.api = api;\n      this.auth = auth;\n      this.userStore = userStore;\n      this.users = [];\n      this.fullName = \"\";\n    }\n\n    ngOnInit() {\n      this.api.getUsers().subscribe(res => {\n        this.users = res;\n      });\n      this.userStore.getFullNameFromStore().subscribe(val => {\n        const fullNameFromToken = this.auth.getFullNameFromToken();\n        this.fullName = val || fullNameFromToken;\n      });\n      this.userStore.getRoleFromStore().subscribe(val => {\n        const roleFromToken = this.auth.getRoleFromToken();\n        this.role = val || roleFromToken;\n      });\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.UserStoreService));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 16,\n    vars: 1,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [4, \"ngIf\"], [1, \"col-md-9\", \"ms-sm-auto\", \"col-lg-10\", \"px-md-4\"], [1, \"chartjs-size-monitor\"], [1, \"chartjs-size-monitor-expand\"], [1, \"\"], [1, \"d-flex\", \"justify-content-between\", \"flex-wrap\", \"flex-md-nowrap\", \"align-items-center\", \"pt-3\", \"pb-2\", \"mb-3\"], [1, \"h2\"], [1, \"btn-toolbar\", \"mb-2\", \"mb-md-0\"], [1, \"btn-group\", \"me-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-secondary\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, DashboardComponent_ng_container_2_Template, 2, 0, \"ng-container\", 2);\n        i0.ɵɵelementStart(3, \"main\", 3)(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵelement(6, \"div\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 7)(8, \"h1\", 8);\n        i0.ɵɵtext(9, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 9)(11, \"div\", 10)(12, \"button\", 11);\n        i0.ɵɵtext(13, \"Share\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 11);\n        i0.ɵɵtext(15, \"Export\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.role === \"Admin\");\n      }\n    },\n    dependencies: [i4.NgIf],\n    styles: [\"[_nghost-%COMP%]{padding:30px}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}