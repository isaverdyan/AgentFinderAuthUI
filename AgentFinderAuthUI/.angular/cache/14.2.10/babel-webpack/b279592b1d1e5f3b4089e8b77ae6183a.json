{"ast":null,"code":"var _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport * as alertify from 'alertifyjs';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MessageComponent } from '../message/message.component';\nlet CustomersComponent = class CustomersComponent {\n  constructor(auth, customerService, dialog) {\n    this.auth = auth;\n    this.customerService = customerService;\n    this.dialog = dialog;\n    this.displayedColumns = ['select', 'position', 'id', 'firstname', 'lastname', 'username', 'email', 'lastContactDate', 'shortDescription', 'action'];\n    this.columnsToDisplayWithExpand = [...this.displayedColumns, 'expand'];\n    this.selection = new SelectionModel(true, []);\n  }\n\n  ngOnInit() {\n    this.getAll();\n    this.customerService.RequiredRefresh.subscribe(r => {\n      this.getAll();\n    });\n  }\n\n  ngAfterViewInit() {}\n\n  getAll() {\n    var decodedToken = this.auth.decodedToken();\n    console.log(' --------- ' + JSON.stringify(decodedToken));\n    this.customerService.getAll().subscribe(result => {\n      this.cstdata = result;\n      this.dataSource = new MatTableDataSource(this.cstdata);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  FunctionDelete(id) {\n    alertify.confirm(\"Remove Employee\", \"Do you want to remove?\", () => {\n      this.customerService.Remove(id).subscribe(result => {\n        this.getAll();\n        alertify.success(\"Removed successfully.\");\n      });\n    }, function () {});\n  }\n\n  Filterchange(event) {\n    const filvalue = event.target.value;\n    this.dataSource.filter = filvalue;\n  }\n\n  onCustomerToggled(customer) {\n    this.selection.toggle(customer);\n    console.log(this.selection.selected);\n  } // /** Whether the number of selected elements matches the total number of rows. */\n  // isAllSelected() {\n  //   const numSelected = this.selection.selected.length;\n  //   const numRows = this.dataSource?.data.length;\n  //   return numSelected === numRows;\n  // }\n  // /** Selects all rows if they are not all selected; otherwise clear selection. */\n  // toggleAllRows() {\n  //   if (this.isAllSelected()) {\n  //     this.selection.clear();\n  //     return;\n  //   }\n  //   this.selection.select(...this.dataSource.data);\n  // }\n  // masterToggle() {\n  //   this.isAllSelected()\n  //     ? this.selection.clear()\n  //     : this.dataSource.data.forEach(row =>\n  //         this.dataSource.select(row)\n  //       );\n  // }\n  // /** The label for the checkbox on the passed row */\n  // checkboxLabel(row?: Customer): string {\n  //   if (!row) {\n  //     return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n  //   }\n  //   return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  // }\n\n\n  openSendingPopup() {\n    const dataSel = this.dataSource.data.filter(item => item.selected);\n    var custsel = JSON.stringify(this.selection.selected);\n    console.log(' xxxxxxxxxx ' + JSON.stringify(this.selection.selected));\n    const dialogRef = this.dialog.open(MessageComponent, {\n      height: '400px',\n      width: '600px',\n      data: {\n        messagedata: custsel\n      }\n    });\n  }\n\n};\n\n__decorate([ViewChild(MatPaginator), __metadata(\"design:type\", MatPaginator)], CustomersComponent.prototype, \"paginator\", void 0);\n\n__decorate([ViewChild(MatSort), __metadata(\"design:type\", MatSort)], CustomersComponent.prototype, \"sort\", void 0);\n\nCustomersComponent = __decorate([Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _a : Object, CustomerService, MatDialog])], CustomersComponent);\nexport { CustomersComponent };","map":null,"metadata":{},"sourceType":"module"}