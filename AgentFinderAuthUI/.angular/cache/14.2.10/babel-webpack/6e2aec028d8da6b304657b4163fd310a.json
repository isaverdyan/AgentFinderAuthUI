{"ast":null,"code":"import { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport { MessageApiModel } from 'src/app/models/message.model';\nimport { MessageSenderService } from 'src/app/services/message-sender.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/message-sender.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\n\nfunction MessageComponent_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 6);\n    i0.ɵɵtext(1, \"*Message text is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let MessageComponent = /*#__PURE__*/(() => {\n  class MessageComponent {\n    constructor(messageSenderService, fb, dialogRef, data) {\n      // this.data.messagedata.forEach((key, index) => {\n      //   console.log(' eeeeeeeeeee ' + Object.entries(key['user']));\n      //   this.chosenUsers.push( Object.entries(key['user']));\n      this.messageSenderService = messageSenderService;\n      this.fb = fb;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.chosenUsers = []; // Object.keys(key['user']).forEach( (value, ind) => {\n      //   console.log(value, ind);\n      // })\n      // console.log(key, this.data[key], index);\n      // console.log(key.shortDescription);\n      // Object.entries(key).forEach((ku, indu) => {\n      //   console.log(ku, indu);\n      // });\n      //})\n    }\n\n    ngOnInit() {\n      this.messageForm = this.fb.group({\n        messageText: ['', Validators.required]\n      });\n    }\n\n    sendMessage() {\n      if (this.messageForm.valid) {\n        let messageModel = new MessageApiModel();\n        messageModel.messageText = this.messageText;\n        messageModel.customers = this.data.messagedata;\n        this.messageSenderService.sendMessageToCustomer(messageModel);\n      } else {\n        ValidateForm.validateAllFormFields(this.messageForm);\n      }\n    }\n\n    closeMe() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  MessageComponent.ɵfac = function MessageComponent_Factory(t) {\n    return new (t || MessageComponent)(i0.ɵɵdirectiveInject(i1.MessageSenderService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  MessageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessageComponent,\n    selectors: [[\"app-message\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[2, \"display\", \"flex\", \"flex-direction\", \"column\", \"height\", \"50%\", 3, \"formGroup\"], [1, \"form-group\"], [\"formControlName\", \"messageText\", \"rows\", \"5\", \"cols\", \"30\", \"matInput\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"mat-button\", \"\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", 1, \"btn\", \"btn-secondary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [1, \"text-danger\"]],\n    template: function MessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"p\")(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Enter message text to send\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"textarea\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function MessageComponent_Template_textarea_ngModelChange_5_listener($event) {\n          return ctx.messageText = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, MessageComponent_small_6_Template, 2, 0, \"small\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function MessageComponent_Template_button_click_7_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵtext(8, \"Send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function MessageComponent_Template_button_click_9_listener() {\n          return ctx.closeMe();\n        });\n        i0.ɵɵtext(10, \"Close\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.messageForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.messageText);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.messageForm.controls[\"messageText\"].dirty && ctx.messageForm.hasError(\"required\", \"messageText\"));\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i5.MatLabel, i6.MatInput, i3.MatDialogClose]\n  });\n  return MessageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}