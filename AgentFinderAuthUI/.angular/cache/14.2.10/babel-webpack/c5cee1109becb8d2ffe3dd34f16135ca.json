{"ast":null,"code":"import { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AgentService = /*#__PURE__*/(() => {\n  class AgentService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'https://localhost:7216/api/agent/';\n      this._refreshrequired = new Subject();\n    }\n\n    getAll() {\n      return this.http.get(`${this.baseUrl}list`);\n    }\n\n    Remove(id) {\n      return this.http.delete(`${this.baseUrl}delete`);\n    }\n\n    subscribeToAgent(subscribeApiModel) {\n      var token = localStorage.getItem('token');\n      const headers = new HttpHeaders().set('content-type', 'application/json').set('Access-Control-Allow-Origin', '*').set('Authorization', `Bearer ${token}`);\n      let options = {\n        headers: headers\n      };\n      var body = {\n        subscribeModel: subscribeApiModel\n      };\n      const req = new HttpRequest('POST', `${this.baseUrl}subscribe`, subscribeModel, options);\n      this.http.request(req).subscribe(res => {\n        console.log(' uuuuuuuuu ' + res);\n      });\n    }\n\n    get RequiredRefresh() {\n      return this._refreshrequired;\n    }\n\n  }\n\n  AgentService.ɵfac = function AgentService_Factory(t) {\n    return new (t || AgentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AgentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AgentService,\n    factory: AgentService.ɵfac,\n    providedIn: 'root'\n  });\n  return AgentService;\n})();","map":null,"metadata":{},"sourceType":"module"}