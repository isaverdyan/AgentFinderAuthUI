{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgToastService } from 'ng-angular-popup';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, auth, router, toast, userStore) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.toast = toast;\n    this.userStore = userStore;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n\n  onLogin() {\n    debugger;\n\n    if (this.loginForm.valid) {\n      this.auth.signIn(this.loginForm.value).subscribe({\n        next: res => {\n          this.loginForm.reset();\n          this.auth.storeToken(res.accessToken);\n          this.auth.storeRefreshToken(res.refreshToken);\n          console.log(\">>>>>>>>>> \" + JSON.stringify(res));\n          const tokenPayload = this.auth.decodedToken();\n          this.userStore.setFullNameForStore(tokenPayload.name);\n          this.userStore.setRoleForStore(tokenPayload.role);\n          this.toast.success({\n            detail: \"SUCCESS\",\n            summary: res.message,\n            duration: 5000\n          });\n          this.router.navigate(['dashboard']);\n        },\n        error: err => {\n          this.toast.error({\n            detail: \"ERROR\",\n            summary: \"Something went wrong!\",\n            duration: 5000\n          });\n          console.log(err);\n        }\n      });\n      console.log(this.loginForm.value);\n    } else {\n      //throw the error using toaster and required fields\n      console.log(\"form is not valid\");\n      ValidateForm.validateAllFormFields(this.loginForm);\n      alert(\"your form is invalid\");\n    }\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n}), __metadata(\"design:paramtypes\", [UntypedFormBuilder, AuthService, Router, NgToastService, UserStoreService])], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module"}